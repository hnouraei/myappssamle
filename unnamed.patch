Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- index.html	(date 1606492277458)
+++ index.html	(date 1606492277458)
@@ -0,0 +1,9 @@
+<html>
+    <head>
+    <title> My App </title>
+    </head>
+    <body>
+    This is my app;
+    </body>
+
+</html>
\ No newline at end of file
Index: Kaggle_API.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kaggle_API.ipynb	(date 1606489132160)
+++ Kaggle_API.ipynb	(date 1606489132160)
@@ -0,0 +1,1016 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "# Kaggle API for downloading datasets "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Requirement already up-to-date: kaggle in c:\\users\\hnour\\anaconda3\\lib\\site-packages (1.5.9)\n",
+      "Requirement already satisfied, skipping upgrade: python-dateutil in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (2.8.1)\n",
+      "Requirement already satisfied, skipping upgrade: six>=1.10 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (1.15.0)\n",
+      "Requirement already satisfied, skipping upgrade: tqdm in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (4.50.2)\n",
+      "Requirement already satisfied, skipping upgrade: python-slugify in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (4.0.1)\n",
+      "Requirement already satisfied, skipping upgrade: urllib3 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (1.25.11)\n",
+      "Requirement already satisfied, skipping upgrade: requests in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (2.24.0)\n",
+      "Requirement already satisfied, skipping upgrade: certifi in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (2020.6.20)\n",
+      "Requirement already satisfied, skipping upgrade: slugify in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from kaggle) (0.0.1)\n",
+      "Requirement already satisfied, skipping upgrade: text-unidecode>=1.3 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from python-slugify->kaggle) (1.3)\n",
+      "Requirement already satisfied, skipping upgrade: chardet<4,>=3.0.2 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from requests->kaggle) (3.0.4)\n",
+      "Requirement already satisfied, skipping upgrade: idna<3,>=2.5 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from requests->kaggle) (2.10)\n"
+     ]
+    }
+   ],
+   "source": [
+    "!pip install kaggle --upgrade"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import os, sys"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import pathlib"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 19,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# The API key should be in a folder called \"kaggle\"\n",
+    "pathlib.Path(\"C:/Users/hnour/.kaggle\").mkdir(parents=True, exist_ok=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " Volume in drive C is Windows\n",
+      " Volume Serial Number is 2E0A-2E32\n",
+      "\n",
+      " Directory of C:\\Users\\hnour\n",
+      "\n",
+      "2020-11-24  12:51 PM    <DIR>          .\n",
+      "2020-11-24  12:51 PM    <DIR>          ..\n",
+      "2019-10-08  10:35 PM    <DIR>          .anaconda\n",
+      "2020-10-05  10:15 AM    <DIR>          .astropy\n",
+      "2020-11-10  09:08 AM            14,829 .bash_history\n",
+      "2020-11-24  12:51 PM    <DIR>          .conda\n",
+      "2020-11-24  10:12 AM                43 .condarc\n",
+      "2019-11-18  03:43 PM    <DIR>          .config\n",
+      "2020-11-06  05:49 PM    <DIR>          .continuum\n",
+      "2020-11-17  02:58 PM    <DIR>          .cufflinks\n",
+      "2019-10-09  07:18 PM    <DIR>          .docker\n",
+      "2020-11-24  12:38 PM    <DIR>          .ipynb_checkpoints\n",
+      "2019-10-08  10:36 PM    <DIR>          .ipython\n",
+      "2020-10-08  09:47 AM    <DIR>          .jupyter\n",
+      "2019-12-23  12:00 PM    <DIR>          .keras\n",
+      "2020-10-08  09:09 PM    <DIR>          .matplotlib\n",
+      "2020-11-17  02:58 PM    <DIR>          .plotly\n",
+      "2019-10-30  12:21 PM    <DIR>          .PyCharm2019.2\n",
+      "2019-10-08  10:46 PM    <DIR>          .PyCharmCE2019.2\n",
+      "2019-12-05  03:43 PM    <DIR>          .PyCharmCE2019.3\n",
+      "2020-11-06  07:50 PM                33 .python_history\n",
+      "2020-10-29  04:32 PM    <DIR>          .spyder-py3\n",
+      "2019-11-14  11:44 AM    <DIR>          .ssh\n",
+      "2019-12-06  03:17 PM             1,383 .viminfo\n",
+      "2020-11-24  10:13 AM    <DIR>          .virtual_documents\n",
+      "2020-10-08  09:14 PM    <DIR>          .VirtualBox\n",
+      "2020-11-06  05:24 PM    <DIR>          __pycache__\n",
+      "2020-10-01  07:51 AM    <DIR>          3D Objects\n",
+      "2020-11-06  08:17 PM    <DIR>          Anaconda3\n",
+      "2019-11-28  12:26 PM    <DIR>          ansel\n",
+      "2020-11-06  05:24 PM               249 bokeh_example.py\n",
+      "2020-11-06  05:41 PM            35,822 bokeh_example_1.ipynb\n",
+      "2020-11-06  05:41 PM             1,950 bokehtest.ipynb\n",
+      "2020-10-01  07:51 AM    <DIR>          Contacts\n",
+      "2020-11-24  12:51 PM             5,791 Data_Analysis .ipynb\n",
+      "2020-11-23  11:35 AM         6,628,228 Data_Visualization_plotly.ipynb\n",
+      "2020-11-16  02:03 PM               116 debug.log\n",
+      "2020-11-22  07:55 PM    <DIR>          Desktop\n",
+      "2020-11-17  05:04 PM    <DIR>          Documents\n",
+      "2020-11-23  04:23 PM    <DIR>          Downloads\n",
+      "2020-11-23  05:48 PM    <DIR>          Dropbox\n",
+      "2020-10-01  07:51 AM    <DIR>          Favorites\n",
+      "2020-11-23  05:36 PM    <DIR>          Google Drive\n",
+      "2020-11-17  02:59 PM         3,296,709 grouped-bar.html\n",
+      "2020-11-18  08:06 AM                21 Hello_world.py\n",
+      "2020-11-04  02:14 PM             7,814 hoomannouraei.html\n",
+      "2020-11-24  12:51 PM    <DIR>          kaggle\n",
+      "2020-10-01  07:51 AM    <DIR>          Links\n",
+      "2019-10-17  08:04 AM    <DIR>          Microsoft\n",
+      "2020-10-01  07:51 AM    <DIR>          Music\n",
+      "2019-10-09  06:13 PM    <DIR>          OneDrive\n",
+      "2020-11-22  02:52 PM    <DIR>          Pictures\n",
+      "2020-11-17  09:17 AM        65,064,745 PUBG.csv\n",
+      "2020-11-06  08:28 PM    <DIR>          PycharmProjects\n",
+      "2020-11-22  12:37 PM    <DIR>          pydata-book-2nd-edition\n",
+      "2020-11-23  04:34 PM            27,877 Python_fun_coding .ipynb\n",
+      "2020-11-11  01:40 PM         2,594,384 Python_WebScraping_Tutorial.ipynb\n",
+      "2019-07-29  09:03 PM    <DIR>          Roaming\n",
+      "2020-10-01  07:51 AM    <DIR>          Saved Games\n",
+      "2019-10-31  09:35 AM    <DIR>          scikit_learn_data\n",
+      "2020-11-06  05:42 PM               620 scratch_1.py\n",
+      "2019-10-17  10:51 AM    <DIR>          seaborn-data\n",
+      "2020-10-01  07:51 AM    <DIR>          Searches\n",
+      "2019-10-09  07:01 PM    <DIR>          source\n",
+      "2020-11-18  09:40 AM             5,592 test.html\n",
+      "2020-11-17  01:39 PM            55,371 Time_Series_Tesla_Stock_Price.csv\n",
+      "2020-10-01  07:51 AM    <DIR>          Videos\n",
+      "              19 File(s)     77,741,577 bytes\n",
+      "              48 Dir(s)  305,102,426,112 bytes free\n"
+     ]
+    }
+   ],
+   "source": [
+    "%ls"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "shutil.copy()\n",
+    "Pythonâ€™s shutil module provides a function shutil.copy() i.e.\n",
+    "\n",
+    "<code> \n",
+    "    shutil.copy(src, dst, *, follow_symlinks=True) \n",
+    "</code>\n",
+    "\n",
+    "\n",
+    "    It copies the file pointed by src to the directory pointed by dst.\n",
+    "Parameters:\n",
+    "\n",
+    "<b> src</b> is the file path in string \n",
+    "\n",
+    "\n",
+    "<b> dst </b> can be a directory path or another file path in string.\n",
+    "\n",
+    "<ul>\n",
+    "    <li> If src is a path of symbolic link, </li>\n",
+    "    <li> If follow_symlinks is True, then it will copy the file pointed by symbolic link.</li>\n",
+    "    <li> If follow_symlinks is False, then it create a new similar symbolic link in dst directory.</li>\n",
+    "</ul>\n",
+    "Returns :\n",
+    "\n",
+    "It returns the path string of the newly created file."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import shutil"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 20,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "'C:/Users/hnour/.kaggle/kaggle.json'"
+      ]
+     },
+     "execution_count": 20,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "shutil.copy('C:/Users/hnour/Downloads/kaggle.json','C:/Users/hnour/.kaggle/')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "C:\\\n"
+     ]
+    }
+   ],
+   "source": [
+    "%cd C:/"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "C:\\Users\\hnour\\.kaggle\n"
+     ]
+    }
+   ],
+   "source": [
+    "%cd C:/Users/hnour/.kaggle/"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " Volume in drive C is Windows\n",
+      " Volume Serial Number is 2E0A-2E32\n",
+      "\n",
+      " Directory of C:\\Users\\hnour\\.kaggle\n",
+      "\n",
+      "2020-11-24  01:39 PM    <DIR>          .\n",
+      "2020-11-24  01:39 PM    <DIR>          ..\n",
+      "2020-11-24  01:39 PM                64 kaggle.json\n",
+      "               1 File(s)             64 bytes\n",
+      "               2 Dir(s)  304,692,109,312 bytes free\n"
+     ]
+    }
+   ],
+   "source": [
+    "%ls"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "ref                                                        title                                                size  lastUpdated          downloadCount  voteCount  usabilityRating  \n",
+      "---------------------------------------------------------  --------------------------------------------------  -----  -------------------  -------------  ---------  ---------------  \n",
+      "mlg-ulb/creditcardfraud                                    Credit Card Fraud Detection                          66MB  2018-03-23 01:17:27         270250       6693  0.85294116       \n",
+      "ntnu-testimon/paysim1                                      Synthetic Financial Datasets For Fraud Detection    178MB  2017-04-03 08:40:34          35855        816  0.88235295       \n",
+      "rtatman/fraudulent-email-corpus                            Fraudulent E-mail Corpus                              6MB  2017-07-25 18:41:30           4687         95  0.875            \n",
+      "mishra5001/credit-card                                     Credit Card Fraud Detection                         112MB  2019-07-15 06:36:02           2062         48  0.8235294        \n",
+      "rohitrox/healthcare-provider-fraud-detection-analysis       HEALTHCARE PROVIDER FRAUD DETECTION ANALYSIS        25MB  2019-05-09 19:50:55           4886        103  0.5294118        \n",
+      "isaikumar/creditcardfraud                                  Credit Card Fraud Detection Dataset                  66MB  2018-05-05 09:38:01           3155         52  0.47058824       \n",
+      "ntnu-testimon/banksim1                                     Synthetic data from a financial payment system       13MB  2017-07-11 14:48:56           4479        113  0.8235294        \n",
+      "llabhishekll/fraud-email-dataset                           Fraud Email Dataset                                   6MB  2018-08-02 06:17:38            820          8  0.5294118        \n",
+      "dmirandaalves/predict-chargeback-frauds-payment            Predict Chargeback Frauds                           137KB  2019-08-22 03:44:37            385         15  0.9705882        \n",
+      "dileep070/anomaly-detection                                Credit card fraud detection                          43MB  2019-06-19 06:00:05            676         17  0.3529412        \n",
+      "shayannaveed/credit-card-fraud-detection                   Credit Card Fraud Detection                          66MB  2019-12-24 08:07:24            290          7  0.88235295       \n",
+      "vbinh002/fraud-ecommerce                                   Fraud ecommerce                                       7MB  2018-12-09 23:54:59            706         13  0.29411766       \n",
+      "robinreni/signature-verification-dataset                   Signature_Verification_Dataset                      601MB  2019-01-24 16:20:38           2370         29  0.7058824        \n",
+      "speedoheck/inpatient-hospital-charges                      Hospital Charges for Inpatients                       7MB  2016-09-19 01:48:45           5625        122  0.5882353        \n",
+      "kartik2112/fraud-detection                                 Credit Card Transactions Fraud Detection Dataset    202MB  2020-08-05 15:20:55            878         24  0.7941176        \n",
+      "mrmorj/fraud-detection-in-electricity-and-gas-consumption  Fraud Detection in Electricity and Gas Consumption   87MB  2020-08-24 12:29:16            158         15  0.7941176        \n",
+      "kyakovlev/ieee-submissions-and-uids                        IEEE - submissions and uids                          75MB  2019-10-05 11:11:13            237         10  0.64705884       \n",
+      "sid321axn/audit-data                                       Audit Data                                           28KB  2019-07-19 11:52:54           1131         30  0.85294116       \n",
+      "preritsaxena/fraud-detection                               Fraud detection                                       6MB  2020-09-15 04:39:47             55          3  0.5294118        \n",
+      "muhakabartay/yourallmodelsdata                             IEEE-CIS Fraud Detection Models Data                 28MB  2019-09-18 07:57:04             20          6  1.0              \n"
+     ]
+    }
+   ],
+   "source": [
+    "!kaggle datasets list -s 'fraud'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Downloading paysim1.zip to C:\\Users\\hnour\\kaggle_dataset\n",
+      "\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "  0%|          | 0.00/178M [00:00<?, ?B/s]\n",
+      "  1%|          | 1.00M/178M [00:00<00:23, 7.79MB/s]\n",
+      "  2%|1         | 3.00M/178M [00:00<00:20, 8.74MB/s]\n",
+      "  3%|2         | 5.00M/178M [00:00<00:18, 9.63MB/s]\n",
+      "  4%|3         | 7.00M/178M [00:00<00:17, 10.4MB/s]\n",
+      "  5%|5         | 9.00M/178M [00:00<00:16, 10.7MB/s]\n",
+      "  6%|6         | 11.0M/178M [00:00<00:15, 11.2MB/s]\n",
+      "  7%|7         | 13.0M/178M [00:01<00:16, 10.6MB/s]\n",
+      "  8%|8         | 15.0M/178M [00:01<00:15, 11.1MB/s]\n",
+      " 10%|9         | 17.0M/178M [00:01<00:14, 11.5MB/s]\n",
+      " 11%|#         | 19.0M/178M [00:01<00:14, 11.2MB/s]\n",
+      " 12%|#1        | 21.0M/178M [00:01<00:14, 11.6MB/s]\n",
+      " 13%|#2        | 23.0M/178M [00:02<00:13, 11.9MB/s]\n",
+      " 14%|#4        | 25.0M/178M [00:02<00:13, 12.1MB/s]\n",
+      " 15%|#5        | 27.0M/178M [00:02<00:12, 12.2MB/s]\n",
+      " 16%|#6        | 29.0M/178M [00:02<00:12, 12.3MB/s]\n",
+      " 17%|#7        | 31.0M/178M [00:02<00:12, 12.4MB/s]\n",
+      " 19%|#8        | 33.0M/178M [00:02<00:12, 12.5MB/s]\n",
+      " 20%|#9        | 35.0M/178M [00:03<00:11, 12.5MB/s]\n",
+      " 21%|##        | 37.0M/178M [00:03<00:11, 12.5MB/s]\n",
+      " 22%|##1       | 39.0M/178M [00:03<00:11, 12.6MB/s]\n",
+      " 23%|##3       | 41.0M/178M [00:03<00:11, 12.5MB/s]\n",
+      " 24%|##4       | 43.0M/178M [00:03<00:11, 12.6MB/s]\n",
+      " 25%|##5       | 45.0M/178M [00:03<00:11, 12.6MB/s]\n",
+      " 26%|##6       | 47.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 28%|##7       | 49.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 29%|##8       | 51.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 30%|##9       | 53.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 31%|###       | 55.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 32%|###2      | 57.0M/178M [00:04<00:10, 12.6MB/s]\n",
+      " 33%|###3      | 59.0M/178M [00:05<00:09, 12.6MB/s]\n",
+      " 34%|###4      | 61.0M/178M [00:05<00:09, 12.6MB/s]\n",
+      " 35%|###5      | 63.0M/178M [00:05<00:09, 12.5MB/s]\n",
+      " 37%|###6      | 65.0M/178M [00:05<00:09, 12.6MB/s]\n",
+      " 38%|###7      | 67.0M/178M [00:05<00:09, 12.6MB/s]\n",
+      " 39%|###8      | 69.0M/178M [00:05<00:09, 12.6MB/s]\n",
+      " 40%|###9      | 71.0M/178M [00:06<00:08, 12.6MB/s]\n",
+      " 41%|####1     | 73.0M/178M [00:06<00:08, 12.6MB/s]\n",
+      " 42%|####2     | 75.0M/178M [00:06<00:08, 12.5MB/s]\n",
+      " 43%|####3     | 77.0M/178M [00:06<00:08, 12.6MB/s]\n",
+      " 44%|####4     | 79.0M/178M [00:06<00:08, 12.6MB/s]\n",
+      " 46%|####5     | 81.0M/178M [00:06<00:08, 12.6MB/s]\n",
+      " 47%|####6     | 83.0M/178M [00:07<00:07, 12.6MB/s]\n",
+      " 48%|####7     | 85.0M/178M [00:07<00:07, 12.6MB/s]\n",
+      " 49%|####8     | 87.0M/178M [00:07<00:07, 12.6MB/s]\n",
+      " 50%|#####     | 89.0M/178M [00:07<00:07, 12.5MB/s]\n",
+      " 51%|#####1    | 91.0M/178M [00:07<00:07, 12.5MB/s]\n",
+      " 52%|#####2    | 93.0M/178M [00:07<00:07, 12.5MB/s]\n",
+      " 53%|#####3    | 95.0M/178M [00:08<00:06, 12.5MB/s]\n",
+      " 55%|#####4    | 97.0M/178M [00:08<00:06, 12.5MB/s]\n",
+      " 56%|#####5    | 99.0M/178M [00:08<00:06, 12.5MB/s]\n",
+      " 57%|#####6    | 101M/178M [00:08<00:06, 12.5MB/s] \n",
+      " 58%|#####7    | 103M/178M [00:08<00:06, 12.6MB/s]\n",
+      " 59%|#####9    | 105M/178M [00:08<00:06, 12.6MB/s]\n",
+      " 60%|######    | 107M/178M [00:09<00:05, 12.6MB/s]\n",
+      " 61%|######1   | 109M/178M [00:09<00:05, 12.6MB/s]\n",
+      " 62%|######2   | 111M/178M [00:09<00:05, 12.3MB/s]\n",
+      " 64%|######3   | 113M/178M [00:09<00:05, 11.6MB/s]\n",
+      " 65%|######4   | 115M/178M [00:09<00:05, 11.2MB/s]\n",
+      " 66%|######5   | 117M/178M [00:10<00:05, 10.9MB/s]\n",
+      " 67%|######6   | 119M/178M [00:10<00:05, 10.7MB/s]\n",
+      " 68%|######8   | 121M/178M [00:10<00:05, 10.5MB/s]\n",
+      " 69%|######9   | 123M/178M [00:10<00:05, 10.5MB/s]\n",
+      " 70%|#######   | 125M/178M [00:10<00:05, 10.4MB/s]\n",
+      " 71%|#######   | 126M/178M [00:10<00:05, 10.4MB/s]\n",
+      " 71%|#######1  | 127M/178M [00:11<00:05, 10.3MB/s]\n",
+      " 72%|#######2  | 128M/178M [00:11<00:05, 10.3MB/s]\n",
+      " 73%|#######2  | 129M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 73%|#######3  | 130M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 74%|#######3  | 131M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 74%|#######4  | 132M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 75%|#######4  | 133M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 75%|#######5  | 134M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 76%|#######5  | 135M/178M [00:11<00:04, 10.3MB/s]\n",
+      " 77%|#######6  | 136M/178M [00:11<00:04, 10.2MB/s]\n",
+      " 77%|#######7  | 137M/178M [00:12<00:04, 10.3MB/s]\n",
+      " 78%|#######7  | 138M/178M [00:12<00:04, 10.3MB/s]\n",
+      " 78%|#######8  | 139M/178M [00:12<00:03, 10.2MB/s]\n",
+      " 79%|#######8  | 140M/178M [00:12<00:03, 10.2MB/s]\n",
+      " 79%|#######9  | 141M/178M [00:12<00:03, 10.3MB/s]\n",
+      " 80%|#######9  | 142M/178M [00:12<00:03, 10.3MB/s]\n",
+      " 80%|########  | 143M/178M [00:12<00:03, 10.3MB/s]\n",
+      " 81%|########1 | 144M/178M [00:12<00:03, 10.3MB/s]\n",
+      " 82%|########1 | 145M/178M [00:12<00:03, 10.2MB/s]\n",
+      " 82%|########2 | 146M/178M [00:13<00:03, 10.2MB/s]\n",
+      " 83%|########3 | 148M/178M [00:13<00:03, 10.2MB/s]\n",
+      " 84%|########3 | 149M/178M [00:13<00:02, 10.3MB/s]\n",
+      " 84%|########4 | 150M/178M [00:13<00:02, 10.3MB/s]\n",
+      " 85%|########4 | 151M/178M [00:13<00:02, 10.3MB/s]\n",
+      " 86%|########5 | 152M/178M [00:13<00:02, 10.2MB/s]\n",
+      " 86%|########6 | 153M/178M [00:13<00:02, 10.2MB/s]\n",
+      " 87%|########6 | 154M/178M [00:13<00:02, 10.2MB/s]\n",
+      " 87%|########7 | 155M/178M [00:13<00:02, 10.3MB/s]\n",
+      " 88%|########7 | 156M/178M [00:14<00:02, 10.2MB/s]\n",
+      " 88%|########8 | 157M/178M [00:14<00:02, 10.3MB/s]\n",
+      " 89%|########8 | 158M/178M [00:14<00:02, 10.2MB/s]\n",
+      " 89%|########9 | 159M/178M [00:14<00:01, 10.3MB/s]\n",
+      " 90%|######### | 160M/178M [00:14<00:01, 10.3MB/s]\n",
+      " 91%|######### | 161M/178M [00:14<00:01, 10.2MB/s]\n",
+      " 91%|#########1| 162M/178M [00:14<00:01, 10.2MB/s]\n",
+      " 92%|#########1| 163M/178M [00:14<00:01, 10.3MB/s]\n",
+      " 92%|#########2| 164M/178M [00:14<00:01, 10.2MB/s]\n",
+      " 93%|#########2| 165M/178M [00:14<00:01, 10.3MB/s]\n",
+      " 93%|#########3| 166M/178M [00:15<00:01, 10.3MB/s]\n",
+      " 94%|#########3| 167M/178M [00:15<00:01, 10.2MB/s]\n",
+      " 95%|#########4| 168M/178M [00:15<00:00, 10.2MB/s]\n",
+      " 95%|#########5| 169M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 96%|#########5| 170M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 96%|#########6| 171M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 97%|#########6| 172M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 97%|#########7| 173M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 98%|#########7| 174M/178M [00:15<00:00, 10.2MB/s]\n",
+      " 98%|#########8| 175M/178M [00:15<00:00, 10.3MB/s]\n",
+      " 99%|#########9| 176M/178M [00:16<00:00, 10.2MB/s]\n",
+      "100%|#########9| 177M/178M [00:16<00:00, 10.2MB/s]\n",
+      "100%|##########| 178M/178M [00:16<00:00, 11.5MB/s]\n"
+     ]
+    }
+   ],
+   "source": [
+    "# download the dataset from kaggle \n",
+    "!kaggle datasets download -d ntnu-testimon/paysim1"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " Volume in drive C is Windows\n",
+      " Volume Serial Number is 2E0A-2E32\n",
+      "\n",
+      " Directory of C:\\Users\\hnour\n",
+      "\n",
+      "2020-11-24  02:11 PM    <DIR>          .\n",
+      "2020-11-24  02:11 PM    <DIR>          ..\n",
+      "2019-10-08  10:35 PM    <DIR>          .anaconda\n",
+      "2020-10-05  10:15 AM    <DIR>          .astropy\n",
+      "2020-11-10  09:08 AM            14,829 .bash_history\n",
+      "2020-11-24  02:12 PM    <DIR>          .conda\n",
+      "2020-11-24  10:12 AM                43 .condarc\n",
+      "2019-11-18  03:43 PM    <DIR>          .config\n",
+      "2020-11-06  05:49 PM    <DIR>          .continuum\n",
+      "2020-11-17  02:58 PM    <DIR>          .cufflinks\n",
+      "2019-10-09  07:18 PM    <DIR>          .docker\n",
+      "2020-11-24  12:38 PM    <DIR>          .ipynb_checkpoints\n",
+      "2019-10-08  10:36 PM    <DIR>          .ipython\n",
+      "2020-10-08  09:47 AM    <DIR>          .jupyter\n",
+      "2020-11-24  01:39 PM    <DIR>          .kaggle\n",
+      "2019-12-23  12:00 PM    <DIR>          .keras\n",
+      "2020-10-08  09:09 PM    <DIR>          .matplotlib\n",
+      "2020-11-17  02:58 PM    <DIR>          .plotly\n",
+      "2019-10-30  12:21 PM    <DIR>          .PyCharm2019.2\n",
+      "2019-10-08  10:46 PM    <DIR>          .PyCharmCE2019.2\n",
+      "2019-12-05  03:43 PM    <DIR>          .PyCharmCE2019.3\n",
+      "2020-11-06  07:50 PM                33 .python_history\n",
+      "2020-10-29  04:32 PM    <DIR>          .spyder-py3\n",
+      "2019-11-14  11:44 AM    <DIR>          .ssh\n",
+      "2019-12-06  03:17 PM             1,383 .viminfo\n",
+      "2020-11-24  10:13 AM    <DIR>          .virtual_documents\n",
+      "2020-10-08  09:14 PM    <DIR>          .VirtualBox\n",
+      "2020-11-06  05:24 PM    <DIR>          __pycache__\n",
+      "2020-10-01  07:51 AM    <DIR>          3D Objects\n",
+      "2020-11-06  08:17 PM    <DIR>          Anaconda3\n",
+      "2019-11-28  12:26 PM    <DIR>          ansel\n",
+      "2020-11-06  05:24 PM               249 bokeh_example.py\n",
+      "2020-11-06  05:41 PM            35,822 bokeh_example_1.ipynb\n",
+      "2020-11-06  05:41 PM             1,950 bokehtest.ipynb\n",
+      "2020-10-01  07:51 AM    <DIR>          Contacts\n",
+      "2020-11-24  02:11 PM            18,207 Data_Analysis .ipynb\n",
+      "2020-11-23  11:35 AM         6,628,228 Data_Visualization_plotly.ipynb\n",
+      "2020-11-16  02:03 PM               116 debug.log\n",
+      "2020-11-22  07:55 PM    <DIR>          Desktop\n",
+      "2020-11-17  05:04 PM    <DIR>          Documents\n",
+      "2020-11-24  02:05 PM    <DIR>          Downloads\n",
+      "2020-11-23  05:48 PM    <DIR>          Dropbox\n",
+      "2020-10-01  07:51 AM    <DIR>          Favorites\n",
+      "2020-11-23  05:36 PM    <DIR>          Google Drive\n",
+      "2020-11-17  02:59 PM         3,296,709 grouped-bar.html\n",
+      "2020-11-18  08:06 AM                21 Hello_world.py\n",
+      "2020-11-04  02:14 PM             7,814 hoomannouraei.html\n",
+      "2020-11-24  01:33 PM    <DIR>          kaggle\n",
+      "2020-10-01  07:51 AM    <DIR>          Links\n",
+      "2019-10-17  08:04 AM    <DIR>          Microsoft\n",
+      "2020-10-01  07:51 AM    <DIR>          Music\n",
+      "2019-10-09  06:13 PM    <DIR>          OneDrive\n",
+      "2020-11-22  02:52 PM    <DIR>          Pictures\n",
+      "2020-11-17  09:17 AM        65,064,745 PUBG.csv\n",
+      "2020-11-06  08:28 PM    <DIR>          PycharmProjects\n",
+      "2020-11-22  12:37 PM    <DIR>          pydata-book-2nd-edition\n",
+      "2020-11-23  04:34 PM            27,877 Python_fun_coding .ipynb\n",
+      "2020-11-11  01:40 PM         2,594,384 Python_WebScraping_Tutorial.ipynb\n",
+      "2019-07-29  09:03 PM    <DIR>          Roaming\n",
+      "2020-10-01  07:51 AM    <DIR>          Saved Games\n",
+      "2019-10-31  09:35 AM    <DIR>          scikit_learn_data\n",
+      "2020-11-06  05:42 PM               620 scratch_1.py\n",
+      "2019-10-17  10:51 AM    <DIR>          seaborn-data\n",
+      "2020-10-01  07:51 AM    <DIR>          Searches\n",
+      "2019-10-09  07:01 PM    <DIR>          source\n",
+      "2020-11-18  09:40 AM             5,592 test.html\n",
+      "2020-11-17  01:39 PM            55,371 Time_Series_Tesla_Stock_Price.csv\n",
+      "2020-10-01  07:51 AM    <DIR>          Videos\n",
+      "2020-11-24  02:11 PM         3,149,480 yolov5compres.zip\n",
+      "              20 File(s)     80,903,473 bytes\n",
+      "              49 Dir(s)  304,415,399,936 bytes free\n"
+     ]
+    }
+   ],
+   "source": [
+    "%ls"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "usage: kaggle [-h] [-v] {competitions,c,datasets,d,kernels,k,config} ...\n",
+      "\n",
+      "optional arguments:\n",
+      "  -h, --help            show this help message and exit\n",
+      "  -v, --version         show program's version number and exit\n",
+      "\n",
+      "commands:\n",
+      "  {competitions,c,datasets,d,kernels,k,config}\n",
+      "                        Use one of:\n",
+      "                        competitions {list, files, download, submit, submissions, leaderboard}\n",
+      "                        datasets {list, files, download, create, version, init, metadata, status}\n",
+      "                        config {view, set, unset}\n",
+      "    competitions (c)    Commands related to Kaggle competitions\n",
+      "    datasets (d)        Commands related to Kaggle datasets\n",
+      "    kernels (k)         Commands related to Kaggle kernels\n",
+      "    config              Configuration settings\n"
+     ]
+    }
+   ],
+   "source": [
+    "!kaggle -h"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "#Unzip the downloaed dataset from kaggle \n",
+    "import zipfile"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "pathlib.Path(\"C:/Users/hnour/kaggle_dataset\").mkdir(parents=True, exist_ok=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with zipfile.ZipFile('C:/Users/hnour/kaggle_dataset/paysim1.zip', 'r') as zip_ref:\n",
+    "    zip_ref.extractall('C:/Users/hnour/kaggle_dataset')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "C:\\Users\\hnour\\kaggle_dataset\n"
+     ]
+    }
+   ],
+   "source": [
+    "%cd C:/Users/hnour/kaggle_dataset/"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "metadata": {
+    "scrolled": true
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " Volume in drive C is Windows\n",
+      " Volume Serial Number is 2E0A-2E32\n",
+      "\n",
+      " Directory of C:\\Users\\hnour\\kaggle_dataset\n",
+      "\n",
+      "2020-11-24  02:33 PM    <DIR>          .\n",
+      "2020-11-24  02:33 PM    <DIR>          ..\n",
+      "2020-11-24  02:31 PM       186,385,561 paysim1.zip\n",
+      "2020-11-24  02:33 PM       493,534,783 PS_20174392719_1491204439457_log.csv\n",
+      "               2 File(s)    679,920,344 bytes\n",
+      "               2 Dir(s)  303,723,327,488 bytes free\n"
+     ]
+    }
+   ],
+   "source": [
+    "%ls"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "# How to rename a file in python \n",
+    "\n",
+    "- Using the os package \n",
+    "\n",
+    "` import os`\n",
+    "\n",
+    "\n",
+    "` os.rename ('a.txt', 'b.txt')`\n",
+    "\n",
+    "- Using the Shutil pakage \n",
+    "\n",
+    "` import shutil`\n",
+    "\n",
+    "\n",
+    "`shutil.move ('a.txt', 'b.txt')`"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {
+    "scrolled": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "'paysim.csv'"
+      ]
+     },
+     "execution_count": 30,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import shutil\n",
+    "\n",
+    "shutil.move ('PS_20174392719_1491204439457_log.csv', 'paysim.csv')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 39,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import pandas as pd"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 40,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df = pd.read_csv('paysim.csv')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>step</th>\n",
+       "      <th>type</th>\n",
+       "      <th>amount</th>\n",
+       "      <th>nameOrig</th>\n",
+       "      <th>oldbalanceOrg</th>\n",
+       "      <th>newbalanceOrig</th>\n",
+       "      <th>nameDest</th>\n",
+       "      <th>oldbalanceDest</th>\n",
+       "      <th>newbalanceDest</th>\n",
+       "      <th>isFraud</th>\n",
+       "      <th>isFlaggedFraud</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>PAYMENT</td>\n",
+       "      <td>9839.64</td>\n",
+       "      <td>C1231006815</td>\n",
+       "      <td>170136.0</td>\n",
+       "      <td>160296.36</td>\n",
+       "      <td>M1979787155</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>1</td>\n",
+       "      <td>PAYMENT</td>\n",
+       "      <td>1864.28</td>\n",
+       "      <td>C1666544295</td>\n",
+       "      <td>21249.0</td>\n",
+       "      <td>19384.72</td>\n",
+       "      <td>M2044282225</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>TRANSFER</td>\n",
+       "      <td>181.00</td>\n",
+       "      <td>C1305486145</td>\n",
+       "      <td>181.0</td>\n",
+       "      <td>0.00</td>\n",
+       "      <td>C553264065</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "   step      type   amount     nameOrig  oldbalanceOrg  newbalanceOrig  \\\n",
+       "0     1   PAYMENT  9839.64  C1231006815       170136.0       160296.36   \n",
+       "1     1   PAYMENT  1864.28  C1666544295        21249.0        19384.72   \n",
+       "2     1  TRANSFER   181.00  C1305486145          181.0            0.00   \n",
+       "\n",
+       "      nameDest  oldbalanceDest  newbalanceDest  isFraud  isFlaggedFraud  \n",
+       "0  M1979787155             0.0             0.0        0               0  \n",
+       "1  M2044282225             0.0             0.0        0               0  \n",
+       "2   C553264065             0.0             0.0        1               0  "
+      ]
+     },
+     "execution_count": 41,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.head(3)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 43,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<bound method DataFrame.info of          step      type      amount     nameOrig  oldbalanceOrg  \\\n",
+       "0           1   PAYMENT     9839.64  C1231006815      170136.00   \n",
+       "1           1   PAYMENT     1864.28  C1666544295       21249.00   \n",
+       "2           1  TRANSFER      181.00  C1305486145         181.00   \n",
+       "3           1  CASH_OUT      181.00   C840083671         181.00   \n",
+       "4           1   PAYMENT    11668.14  C2048537720       41554.00   \n",
+       "...       ...       ...         ...          ...            ...   \n",
+       "6362615   743  CASH_OUT   339682.13   C786484425      339682.13   \n",
+       "6362616   743  TRANSFER  6311409.28  C1529008245     6311409.28   \n",
+       "6362617   743  CASH_OUT  6311409.28  C1162922333     6311409.28   \n",
+       "6362618   743  TRANSFER   850002.52  C1685995037      850002.52   \n",
+       "6362619   743  CASH_OUT   850002.52  C1280323807      850002.52   \n",
+       "\n",
+       "         newbalanceOrig     nameDest  oldbalanceDest  newbalanceDest  isFraud  \\\n",
+       "0             160296.36  M1979787155            0.00            0.00        0   \n",
+       "1              19384.72  M2044282225            0.00            0.00        0   \n",
+       "2                  0.00   C553264065            0.00            0.00        1   \n",
+       "3                  0.00    C38997010        21182.00            0.00        1   \n",
+       "4              29885.86  M1230701703            0.00            0.00        0   \n",
+       "...                 ...          ...             ...             ...      ...   \n",
+       "6362615            0.00   C776919290            0.00       339682.13        1   \n",
+       "6362616            0.00  C1881841831            0.00            0.00        1   \n",
+       "6362617            0.00  C1365125890        68488.84      6379898.11        1   \n",
+       "6362618            0.00  C2080388513            0.00            0.00        1   \n",
+       "6362619            0.00   C873221189      6510099.11      7360101.63        1   \n",
+       "\n",
+       "         isFlaggedFraud  \n",
+       "0                     0  \n",
+       "1                     0  \n",
+       "2                     0  \n",
+       "3                     0  \n",
+       "4                     0  \n",
+       "...                 ...  \n",
+       "6362615               0  \n",
+       "6362616               0  \n",
+       "6362617               0  \n",
+       "6362618               0  \n",
+       "6362619               0  \n",
+       "\n",
+       "[6362620 rows x 11 columns]>"
+      ]
+     },
+     "execution_count": 43,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.info"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: pyspark in c:\\users\\hnour\\anaconda3\\lib\\site-packages (2.4.4)\n",
+      "Requirement already satisfied: py4j==0.10.7 in c:\\users\\hnour\\anaconda3\\lib\\site-packages (from pyspark) (0.10.7)\n"
+     ]
+    }
+   ],
+   "source": [
+    "!pip install pyspark "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 54,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "1.1.3\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(pd.__version__)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 61,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import numpy as np "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 62,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "1.19.2\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(np.__version__)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.7.7"
+  },
+  "varInspector": {
+   "cols": {
+    "lenName": 16,
+    "lenType": 16,
+    "lenVar": 40
+   },
+   "kernels_config": {
+    "python": {
+     "delete_cmd_postfix": "",
+     "delete_cmd_prefix": "del ",
+     "library": "var_list.py",
+     "varRefreshCmd": "print(var_dic_list())"
+    },
+    "r": {
+     "delete_cmd_postfix": ") ",
+     "delete_cmd_prefix": "rm(",
+     "library": "var_list.r",
+     "varRefreshCmd": "cat(var_dic_list()) "
+    }
+   },
+   "types_to_exclude": [
+    "module",
+    "function",
+    "builtin_function_or_method",
+    "instance",
+    "_Feature"
+   ],
+   "window_display": false
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 4
+}
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.gitignore	(date 1606490943811)
+++ .idea/.gitignore	(date 1606490943811)
@@ -0,0 +1,2 @@
+# Default ignored files
+/workspace.xml
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(date 1606490942827)
+++ .idea/inspectionProfiles/profiles_settings.xml	(date 1606490942827)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app.js	(date 1606490716197)
+++ app.js	(date 1606490716197)
@@ -0,0 +1,0 @@
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1606490942815)
+++ .idea/modules.xml	(date 1606490942815)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/kaggle_api.iml" filepath="$PROJECT_DIR$/.idea/kaggle_api.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1606490942805)
+++ .idea/misc.xml	(date 1606490942805)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (untitled)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1606490942797)
+++ .idea/vcs.xml	(date 1606490942797)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/kaggle_api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/kaggle_api.iml	(date 1606490942775)
+++ .idea/kaggle_api.iml	(date 1606490942775)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TestRunnerService">
+    <option name="PROJECT_TEST_RUNNER" value="pytest" />
+  </component>
+</module>
\ No newline at end of file
